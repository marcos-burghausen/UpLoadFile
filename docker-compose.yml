version: '3.9'

services:

  #php+apache
  php:
    image: marcosrafaelburghausen/php8.1-apache2.4
    container_name: Desafio_backend
    working_dir: /var/www/html/
    depends_on:
      # - mysql
      - mongo
      - redis
    networks:
      - network
    ports:
      - "4080:80"
    volumes:
      - "./backend:/var/www/html"
    environment:
      FRONTEND_HOST: node:4080
      MYSQL_HOST: mysql
      MYSQL_PASSWORD: user
      MYSQL_USER: user
      MYSQL_DATABASE: Desafio_database
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: senha

  #node
  node:
    image: marcosrafaelburghausen/node-19
    container_name: Desafio_frontend
    working_dir: /home/node/app
    stdin_open: true
    tty: true
    command: bash -c "npm i && npm run dev -- --host"
    networks:
      - network
    ports:
      - "4081:3000"
    volumes:
      - "./frontend:/home/node/app"
    environment:
      BACK_HOST: php:4081/api
      CHOKIDAR_USEPOLLING: 'true'

  #mongo
  mongo:
    image: mongo
    restart: "no"
    container_name: Desafio-mongo
    networks:
      - network
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: DesafioDB
    volumes:
      - "mongo-db:/data/db"
      - "mongo-configdb:/data/configdb"

  #mongo-express
  mongo-express:
    image: mongo-express
    restart: unless-stopped
    container_name: Desafio-mongo-express
    networks:
      - network
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_BASICAUTH_USERNAME: mexpress
      ME_CONFIG_BASICAUTH_PASSWORD: mexpress
    links:
      - mongo

  #redis
  redis:
    image: redis:7.0
    container_name: Desafio_session_database
    command: bash -c "redis-server --requirepass senha"
    networks:
      - network
    ports:
      - "6379:6379"
    volumes:
      - "redis_db:/data"

  #redis-commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: always
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=senha
    ports:
      - "8082:8081"
    networks:
      - network

volumes:
  # mysql_db:
  #   driver: "local"
  mongo-db:
    driver: "local"
  mongo-configdb:
    driver: "local"
  redis_db:
    driver: "local"

networks:
  network:
    driver: bridge
